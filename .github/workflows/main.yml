name: Build and Deploy on Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-tools-dev qt6-tools-dev-tools libgl1-mesa-dev libglu1-mesa-dev build-essential cmake

    - name: Configure with CMake
      run: cmake -B build -S . -DCMAKE_PREFIX_PATH=/usr/lib/qt6

    - name: Build with CMake
      run: cmake --build build --config Release
      
    - name: Create Release Zip (alternative)
      run: |
        set -e  # Exit on failure
        find build/Release -type f -exec zip -r advanced-tic-tac-toe.zip {} \;  || true  # Suppress errors

    - name: Upload Release Artifact (if zip created)
      uses: actions/upload-artifact@v3
      if: success() && test -f "advanced-tic-tac-toe.zip"  # Only upload if zip exists
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        name: advanced-tic-tac-toe-release
        path: advanced-tic-tac-toe.zip

    - name: Create Release (update token with appropriate permissions)  # Assuming you still want to create a release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: ${{ github.ref }}  # Use the reference name (e.g., branch or tag)
        release_name: Release ${{ github.ref }}  # Update name format if desired
        draft: false
        prerelease: false
